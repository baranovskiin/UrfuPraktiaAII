# -*- coding: utf-8 -*-
"""Копия блокнота "Практика 0.3.0.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oDYyRYFlvFfrGajDjEmW1uJrrHG6GWg8

ФИО
"""

Барановский Никита Евгеньевич

"""**Во всей практике нельзя применять библиотеки предоставляющие готовые решения!**

# **Задача 1.**

Типы данных Напишите программу на Python, которая принимает список чисел в качестве входных данных от пользователя, а затем выводит сумму, среднее значение и максимальное значение из списка.

***Нельзя использовать: len(), min(), max(), average(), sum()***

Дано:
```
1 2 3 4 5 6 7
```
Вывод:

```
Сумма чисел: 28
Среднее арифм.: 4.0
Максимальное значение: 7
```
"""

n = int(input('Введите сколько чисел вы введете'))
b = 0
spisok = []
for i in range(0,n):
    a = int(input())
    b = b + a
    spisok.append(a)
v = spisok[0]
for i in spisok:
    if i > v:
        v = i
print('Максимальное значение:', v)
print('Среднее арифм.:', b/n)
print('Сумма чисел:', b)

"""# **Задача 2.**

Напишите программу на Python, которая принимает список слов в качестве входных данных от пользователя, а затем распечатывает список в обратном порядке.

Ввод:

```
апельсин мандарин яблоко
```

Вывод:

```
яблоко мандарин апельсин
```
"""

n = int(input('Введите данные'))
spisok = []
for i in range(0,n):
    a = int(input())
    spisok.append(a)
slicer = spisok[::-1]
print(slicer)

"""# **Задача 3**

Простой чат-бот
Создайте простого чат-бота, который отвечает на основные запросы пользователей. Программа должна использовать условные выражения для определения намерений пользователя и последующего соответствующего ответа.

Чат бот может:

- помогать складывать числа
- подсказывать фильм, музыку и тд (из заранее созданного списка)
- создавать список дел (а также выводить его, обновлять, очищать)

Интерфейс чат-бота на ваше усмотрение, это могут быть как заранее определенные команды, так и к примеру вызов команды по номеру

*Реализовать без использования функций*

Пример:

Ввод:

```
Олег, какую мызыку посоветуешь?
```

Вывод:

```
Я бы посоветовал вам: Led Zeppelin Stairway to Heaven
```
"""

import random
print('Привет, меня зовут Олег! Что пожелаете?')
print('Функции:1(сложение),2(выбор фильма или музыки), 3(список дел)')
client = int(input('Введите номер функции'))
if client ==  1:
    numb = int(input('введите сколько чисел вы хотите ввести'))
    summ = 0
    for i in range(0,numb):
        z = int(input('Введите число'))
        summ = summ + z
    print(summ)
elif client == 2:
    print('Хотите фильм(1) или музыку(2)?')
    zpr1 = int(input('Введите номер функции'))
    if zpr1 == 1:
               spfilm = ['титаник', 'оно', 'крик']
               rndm = random.randint(1,3)
               print('я бы посоветовал вам:', spfilm[rndm-1])
    if zpr1 == 2:
               spmuz = ['echo', 'hikari', 'epitomize']
               rndm = random.randint(1,3)
               print('я бы посоветовал вам:', spmuz[rndm-1])
elif client == 3:
    spdel = ['сделать уроки', 'сходить в спортзал', 'убраться в доме', 'сходить в магазин']
    spdel1 = []
    rndm1 = random.randint(1,4)
    rndm2 = random.randint(1,4)
    rndm3 = random.randint(1,4)
    spdel1.append(spdel[rndm1-1])
    spdel1.append(spdel[rndm2-1])
    spdel1.append(spdel[rndm3-1])
    print(spdel1)
    print('хотите очистить(1) или увеличить список(2)?')
    x = int(input('введите номер функции'))
    if x == 1:
        delo = int(input('Введите номер дела, который вы хотите убрать'))
        spdel1.remove(delo-1)
        print(spdel1)
    elif x == 2:
        rndm4 = random.randint(1,4)
        spdel1.append(spdel[rndm4-1])
        print(spdel1)

"""# **Задача 4.**

Камень, ножницы, бумага

Создайте игру в Камень, ножницы, бумагу, в которой пользователь может играть против компьютера. Программа должна запросить выбор пользователя, а затем сгенерировать выбор компьютера. Затем программа должна определить победителя на основе правил игры.

**Этап 1:**

Определение победителя

**Этап 2:**
  
Игра до 3 побед


Ввод для "Этап 1":

```
Камень
```

Вывод:

```
Компьютер: Ножницы
Игрок: Камень
Победа: Игрок
```
"""

import random
spisok = ['камень', 'ножницы', 'бумага']
a = random.randint(1,3)
igrok = input('Введите камень/ножницы/бумага')
print(spisok[a-1])
if igrok == 'камень' and a == 2:
    print('Победа:игрок')
elif igrok == 'камень' and a == 3:
    print('Победа:компьютер')
elif igrok == 'камень' and a == 1:
    print('Победа:ничья')
if igrok == 'ножницы' and a == 2:
    print('Победа:ничья')
elif igrok == 'ножницы' and a == 3:
    print('Победа:игрок')
elif igrok == 'ножницы' and a == 1:
    print('Победа:компьютер')
if igrok == 'бумага' and a == 2:
    print('Победа:компьютер')
elif igrok == 'бумага' and a == 3:
    print('Победа:ничья')
elif igrok == 'бумага' and a == 1:
    print('Победа:игрок')

"""# **Задача 5.**

Создайте игру "Палач" или "Виселица", в которой пользователь должен угадать слово, предлагая буквы. Программа должна выбрать случайное слово, а затем разрешить пользователю угадывать буквы. После каждого угадывания программа должна сообщать пользователю, есть ли в слове буква или нет.

**Этап 1**
Создать саму игру

**Этап 2:**
Ввести подсчет количества очков и ограничения на попытки

**Этап 3:** Добавить возможность сразу угадать слово
"""



"""# **Дополнительно: Задача 6.**

**Цифра на определенном месте:**

Последовательно записан натуральный ряд чисел.

Какая цифра стоит в N позиции


Вввод:

```
Введите номер позиции: 1234567890
```

Вывод:

```
8
```
"""

