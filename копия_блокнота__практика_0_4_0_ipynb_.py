# -*- coding: utf-8 -*-
"""Копия блокнота "Практика 0.4.0.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BfLuozChggL2XBkWTNv0Ip4zzo99mAct

Введите ваше ФИО:
"""

Барановский Никита Евгеньевич

"""***Дисклеймер***

В данной практике запрещено использования функций:


*   sum()
*   min()
*   max()
*   average()
*   reversed()
*   sorted()
*   готовые функции или библиотеки

**Задача 1:**



Интернет-магазин предлагает следующие условия скидок:

*   Для заказов больше 1000 единиц, клиент получает скидку 5%. Если клиент использует промокод SUPERDISCOUNT, он получает скидку 10%.
*  Для заказов стоимостью более 5000 единиц, клиент получает скидку 15%, а использование промокода SUPERDISCOUNT увеличивает скидку до 20%.

Этап 1:
Ввод:
```
Введите стоимость единицы товара: 5
Введите количество товара: 1000
Введите промокод: GiVEMEDISCONT
```

Вывод:

```
Ваша скидка: 5%
Итоговая сумма: 4750.0
```
Этап 2:

Оформите ваш код в виде функции
"""

def prodaza():
    cost = int(input('Введите стоимость единицы товара:'))
    num = int(input('Введите количество товара:'))
    promo = input('Введите промокод:')
    coscl = cost*num
    if num >= 1000:
        if promo == 'SUPERDISCOUNT':
            itog = coscl*0.9
        else:
            itog = coscl*0.95
        print(itog)
    elif num >= 2000:
        if promo == 'SUPERDISCOUNT':
            itog = coscl*0.8
        else:
            itog = coscl*0.85
        print(itog)
    elif num < 1000:
        print(itog)
prodaza()

"""**Задача 2:**

Этап 1:
Напишите программу способную отфильтровать список и вывести только положительные элементы


Ввод:
```
-1 5 1 2 -3
```

Вывод:

```
5 1 2
```

Этап 2:

Оформите ваш код в виде функции
"""

def filtr():
    num = int(input('Введите количество чисел:'))
    spsk = []
    for i in range(0, num):
        cif = int(input('Введите число'))
        spsk.append(cif)
    for i in spsk[0:num:1]:
        if i < 0:
            spsk.remove(i)
    print(spsk)
filtr()

"""**Задача 3:**

Этап 1:
Напишите программу реализующую Алгоритм Евклида


> Алгоритм Евклида – это алгоритм нахождения наибольшего общего делителя (НОД) пары целых чисел.



Ввод:
```
30 18
```

Вывод:

```
6
```

Этап 2:
Оформите ваш код в виде функции

"""

def Evklid():
    cif1 = int(input('Введите число:'))
    cif2 = int(input('Введите число:'))
    while cif1 != 0 and cif2 != 0:
        if cif1 > cif2:
            cif1 = cif1 % cif2
        else:
            cif2 = cif2 % cif1
    print(cif1 + cif2)
Evklid()

"""**Задача 4:**

Этап 1:
Напишите функцию программу, которая принимает строку и возвращает список слов и количество их упомнинаний в предложении

Этап 2:
Оформите ваш код в виде функции

Ввод:
```
apple banana apple
```

Вывод:

```
apple: 2,
banana: 1
```
"""

def fltr(sntnc):
    wordstr = sntnc.split()
    words = []
    cnts = []
    for word in wordstr:
        if word not in words:
            words.append(word)
            cnts.append(1)
        else:
            index = words.index(word)
            cnts[index] += 1
    spsk = []
    for i in range(len(words)):
        spsk.append(f"{words[i]}: {cnts[i]}")
    return spsk
sntnc = input('Введите слова')
output = fltr(sntnc)
print(", ".join(output))

"""**Задача 5:**

Этап 1:
Детектор анаграмм Напишите программу на Python, которая принимает в качестве входных данных две строки и проверяет, являются ли они анаграммами друг друга

Этап 2:
Оформите ваш код в виде функции

Ввод:
```
listen, silent
```

Вывод:

```
True
```
"""

def angrms(str1, str2):
    str1 = str1.replace(' ', '').lower()
    str2 = str2.replace(' ', '').lower()
    return sorted(str1) == sorted(str2)
a1 = input("Введите первую строку: ")
a2 = input("Введите вторую строку: ")
if angrms(a1, a2):
    print("Строки являются анаграммами.")
else:
    print("Строки не являются анаграммами.")

"""**Задача 5:**

Шифр ​​Цезаря

Напишите программу на Python, которая реализует шифр Цезаря, простой метод шифрования, который заменяет каждую букву буквой на фиксированное количество позиций вниз по алфавиту. Программа должна запрашивать у пользователя сообщение и значение сдвига, а затем шифровать и расшифровывать сообщение.

Этап 1:

Напишите код для реализации данной задачи

Этап 2:

Оформите код в виде нескольких функций:

* Зашифровывает сообщение
* Расшифровывает сообщение
"""



"""**Задача 6**

Задача: «Банковская система»

Создайте программу Python, которая имитирует базовую банковскую систему. Система должна иметь следующие функции:

Требования
*   Система должна позволять клиентам создавать счета и хранить их балансы.
*   Система должна позволять клиентам вносить и снимать деньги со своих счетов.
*   Система должна позволять клиентам проверять свой текущий баланс.
*   Система должна позволять клиентам переводить деньги между счетами.
*   Система должна отслеживать транзакции (депозиты, снятия и переводы) и иметь возможность печатать детали транзакций.


Задачи
1. Реализуйте банковскую систему, используя только базовые конструкции Python, такие как def, lists, if, elif и else, без классов или словарей.
Определите функции для создания счетов, внесения и снятия денег, получения балансов счетов, перевода денег между счетами, а также создания и печати транзакций.
2. Напишите основную функцию, которая демонстрирует использование банковской системы путем создания счетов, внесения и снятия денег и перевода денег между счетами.
3. Бонусное задание
Реализуйте способ хранения и печати истории транзакций для каждого счета.

Ограничения
Не используйте классы или словари.
Используйте только базовые конструкции Python, такие как def, lists, if, elif и else.

"""

