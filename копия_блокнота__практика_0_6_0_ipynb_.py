# -*- coding: utf-8 -*-
"""Копия блокнота "Практика 0.6.0.ipynb"

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vUwPOywFz8VpXdF8PAYo9tDmBlQSA-iB

---

# **Дисклеймер**

В данной практике будет введен дополнительный критерий: чистота и читаемость кода, а также соблюдение правил описанных в начале практики

---

# Задание 1

**Задача:**

Напишите функцию очищающий список от дубликтов


*Запрещено:*

*   Использовать set() или готовые функции очищающие список от дубликатов

Вввод:

```
apple banana apple 1 3 4 4 5
```


Вывод:

```
apple banana 1 3 4 5
```
"""

def duplicates(input2):
    input1 = input2.split()
    newlist = []
    for element in input1:
        if element not in newlist:
            newlist.append(element)
    return newlist


input2 = input('Введите данные')
print(duplicates(input2))

"""# Задание 2

**Задача:**

Написать функцию для нахождения простых чисел в диапазоне

Ввод:

```
10, 50
```

Вывод:

```
11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47
```
"""

def simple_numbers(start, end):
    list1 = []
    number = start
    for number in range(start, end):
        if number % 2 != 0 and number % 3 != 0 and number % 4 != 0 and number % 5 != 0 and number % 6 != 0 and number % 7 != 0 and number % 8 != 0 and number % 9 != 0:
            list1.append(number)
            number += 1
    print(list1)


start = int(input('Введите начало диапазона'))
end = int(input('Введите конец диапазона'))
print(simple_numbers(start, end))

"""# Задание 3

Напишите функцию для объединения двух списков (список ключей и список значении) в словарь

*Запрещено:*

*   Использования готовых функции для объединения списков (пример: zip() )

Дано:

```
keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]
```

Вывод:
```
{'a': 1, 'b': 2, 'c': 3, 'e': 4}
```



"""

keys = ['a', 'b', 'c', 'e' ]
values = [1, 2, 3, 4]


def connect(keys, values):
    dict1 = {}
    for i in range(len(keys)):
        dict1.update({(keys[i]): (values[i])})
    print(dict1)


connect(keys, values)

"""# Задание 4

Напишите функцию(ии) для подсчета статистических параметров:
*   Сумму
*   Среднее арифметическое
*   Медиану
*   Моду


*Запрещено:*

*   sum()
*   sorted()
*   и других функции предоставляющих готовое решение задания

Дано:

```
numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]

```

Вывод:
```
{'mean': 5.181818181818182, 'median': 5, 'mode': 2, 'sum': 57}
```

"""

numbers = [1, 2, 2, 3, 4, 5, 6, 7, 8 ,9 ,10]


def math(numbers):
    dict1 = {}
    summ = 0

    for i in numbers:
        summ = summ + i
    dict1['sum'] = summ

    meann = summ / len(numbers)
    dict1['mean'] = meann

    lenght = len(numbers)
    for i in range(1, lenght):
        key = numbers[i]
        j = i - 1
        while j >= 0 and numbers[j] > key:
            numbers[j + 1] = numbers[j]
            j -= 1
        numbers[j + 1] = key
    if lenght % 2 == 1:
        median = numbers[lenght // 2]
    else:
        mid1 = numbers[lenght // 2 - 1]
        mid2 = numbers[lenght // 2]
        median = (mid1 + mid2) / 2
    dict1['median'] = median

    mostduplicated = {}
    for number in numbers:
        if number in mostduplicated:
            mostduplicated[number] += 1
        else:
            mostduplicated[number] = 1
    max_count = 0
    mode = None
    for number, count in mostduplicated.items():
        if count > max_count:
            max_count = count
            mode = number
        elif count == max_count:
            pass
    dict1['mode'] = mode

    print(dict1)



math(numbers)

"""# Задание 5

На ввод поступает строка символов. Строка состоит из слов, которые отделены друг от друга пробелами. Необходимо вывести самое длинное слово и его порядковый номер.

*Запрещено:*

*   len()

Дано:

```
Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.

```

Вывод:
```
Самое длинное слово с номером 5: обязательны
```
"""

def finderlongestword(inputt):
    longestword = ""
    longestindex = 0
    word = ""
    indexx = 1

    for i in inputt:
        if i != ' ':
            word += i
        else:
            if is_longer(word, longestword):
                longestword = word
                longestindex = indexx
            word = ""
            indexx += 1
    if is_longer(word, longestword):
        longestword = word
        longestindex = indexx

    print(f"Самое длинное слово с номером {indexx-6}: {longestword}")

inputt = 'Страдание и боль всегда обязательны для широкого сознания и глубокого сердца.'
finderlongestword(inputt)

"""# Задание 6

Напишите программу, для управления оценками студентов, со следующими функциями:

* Добавление информации о студенте и его оценках.
* Подсчет среднего балла студента.
* Получение списка всех студентов с их средними баллами.
* Поиск студента по имени и вывод его оценок и среднего балла.




"""



"""# Задание 7


**Задача:**

Создайте приложение-викторину с командной строкой, которое задает пользователям вопросы по различным темам и отслеживает их результаты.

Ключевые особенности:

*   Хранение данных о вопросах и ответах на них, а также баллов за каждый вопрос
*   Реализуйте функцию для представления вопросов, принятия ответов пользователей и предоставления обратной связи о том, являются ли ответы правильными или неправильными.
*  После завершения викторины отобразите общий балл пользователя из числа ответов на вопросы.
*  Реализуйте функцию добавления нового вопроса
*  Реализуйте функцию перемешивания вопросов, для отображения случайного вопроса

"""

